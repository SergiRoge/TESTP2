/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rmipeer;

import Interficies.IData;
import Interficies.IPeer;
import java.awt.Cursor;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.concurrent.ConcurrentHashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;
import javax.swing.text.Utilities;

/**
 *
 * @author Llango
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    
    public ConcurrentHashMap  conversacionesAbiertas = new ConcurrentHashMap();
    public ConcurrentHashMap  gruposCreados = new ConcurrentHashMap();  
    ArrayList<String> amigosConectados = new ArrayList<>();    
    LinkedList<String> amig = new LinkedList<>();
    LinkedList<String> grupos = new LinkedList<>();
    int peerClicado,grupoClicado;
    Register r;
    IData id;
    Peer ip = null;
    int contadorAmigos = 0;
    String amigos = "";
    
    public MainWindow(Register r,IData id2) throws RemoteException {
        initComponents();
        this.setVisible(true);
        this.r = r;
        r.setVisible(false);
        
        id = id2;
        ip = new Peer(id,r.getNombreUsuario(),this);
        bienvenido.setText("Bienvenido " + ip.getName());
        id.join(r.getNombreUsuario(), ip);
        System.out.println("Me he unido al chat :-)");        
    }
    
    public void addGrupo(String name, ChatGrupoWindow cgw){
        gruposCreados.put(name, cgw);
    }
    
    public void anadirAmigo(String name){
        listaAmigos.setText("");
        amig.add(name);
        for(int i = 0; i<amig.size();i++){
            listaAmigos.append(amig.get(i)+"\n");
        }        
    }
    
    public void pintarListaGrupos(String grupo){
        listaGrupos.setText("");
        grupos.add(grupo);
        for(int i = 0; i<grupos.size();i++){
            listaGrupos.append(grupos.get(i)+"\n");
        } 
    }
    
    public void eliminarAmigo(String name){
        listaAmigos.setText(""); 
        listaAmigos.add(this);
        amig.remove(name);
        for(int i = 0; i<amig.size();i++){
            listaAmigos.append(amig.get(i)+"\n");
        }        
    }
 
    public ConcurrentHashMap getListaAmigos(IPeer ip) throws RemoteException{
        return ip.getPeers();          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listaAmigos = new javax.swing.JTextArea();
        iniciarChat = new javax.swing.JButton();
        desconectar = new javax.swing.JButton();
        bienvenido = new javax.swing.JLabel();
        crearGrupo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaGrupos = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        entrarGrupo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listaAmigos.setColumns(20);
        listaAmigos.setRows(5);
        listaAmigos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaAmigosMouseClicked(evt);
            }
        });
        listaAmigos.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                listaAmigosMouseMoved(evt);
            }
        });
        jScrollPane1.setViewportView(listaAmigos);

        iniciarChat.setText("Iniciar Chat");
        iniciarChat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iniciarChatMouseClicked(evt);
            }
        });
        iniciarChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarChatActionPerformed(evt);
            }
        });

        desconectar.setText("Desconectar");
        desconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desconectarActionPerformed(evt);
            }
        });

        crearGrupo.setText("Crear Grupo");
        crearGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearGrupoActionPerformed(evt);
            }
        });

        listaGrupos.setColumns(20);
        listaGrupos.setRows(5);
        listaGrupos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaGruposMouseClicked(evt);
            }
        });
        listaGrupos.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                listaGruposMouseMoved(evt);
            }
        });
        jScrollPane2.setViewportView(listaGrupos);

        jLabel1.setText("Usuarios conectados");

        jLabel2.setText("Grupos a los que perteneces");

        entrarGrupo.setText("Entrar a grupo");
        entrarGrupo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                entrarGrupoMouseClicked(evt);
            }
        });
        entrarGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrarGrupoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1)
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(desconectar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iniciarChat, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(crearGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entrarGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bienvenido, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(10, 10, 10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(bienvenido, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(225, 225, 225)
                                .addComponent(crearGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(entrarGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(iniciarChat, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(desconectar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void desconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desconectarActionPerformed
        try {
            // TODO add your handling code here:
            id.desconectar(r.getNombreUsuario());
        } catch (RemoteException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        this.setVisible(false);
        r.setVisible(true);
        
    }//GEN-LAST:event_desconectarActionPerformed

    private void listaAmigosMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaAmigosMouseMoved
        // TODO add your handling code here:
        Cursor c;
        c = new Cursor(0);
        listaAmigos.setCursor(c);
    }//GEN-LAST:event_listaAmigosMouseMoved

    private void listaAmigosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaAmigosMouseClicked
        // TODO add your handling code here:
        int caretPos = listaAmigos.getCaretPosition(); //Devuelve el indice del char seleccionado entre toda la lista
        int rowNum = (caretPos == 0) ? 1 : 0;
        for (int offset = caretPos; offset > 0;) {
            try {
                offset = Utilities.getRowStart(listaAmigos, offset) - 1; //Va cogiendo los indices de los chars que delimitan las filas
            } catch (BadLocationException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            rowNum++;
        }       
            peerClicado = rowNum-1;   
    }//GEN-LAST:event_listaAmigosMouseClicked

    public void escribirMensaje(String mensaje, IPeer origen) throws RemoteException{
        if(conversacionesAbiertas.containsKey(origen.getName())){
            ChatWindow cw = (ChatWindow) conversacionesAbiertas.get(origen.getName());
            System.out.println("antes de cw -> " + mensaje);
            cw.append(mensaje, origen);            
        }
        else{
            ChatWindow cw = new ChatWindow(ip,origen,this);
            cw.append(mensaje, origen);
            cw.setVisible(true);       
            conversacionesAbiertas.put(origen.getName(), cw);            
        }        
        System.out.println(origen.getName() + " said : " + mensaje);        
    }
    
    public void escribirMensajeGrupal(String mensaje, IPeer origen, ArrayList<IPeer> destino, String nombreGrupo) throws RemoteException{
        if(gruposCreados.containsKey(origen.getName())){
            ChatGrupoWindow cgw = (ChatGrupoWindow) gruposCreados.get(origen.getName());
            System.out.println("antes de cw -> " + mensaje);
            cgw.append(mensaje, origen);            
        }     
         else{
            ChatGrupoWindow cgw = new ChatGrupoWindow(ip,nombreGrupo, destino ,this);
            cgw.append(mensaje, origen);
            cgw.setVisible(true);
            gruposCreados.put(origen.getName(),cgw);
//            ChatWindow cw = new ChatWindow(ip,p,this);
//            cw.append(mensaje, p);
//            cw.setVisible(true);       
//            conversacionesAbiertas.put(p.getName(), cw);          
        }  
        System.out.println(origen.getName() + " said : " + mensaje);        
    }
    
    public void eliminaConversacion(IPeer origen) throws RemoteException{
        conversacionesAbiertas.remove(origen.getName());    
    }
    
    private void iniciarChatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iniciarChatMouseClicked
        // TODO add your handling code here:      
        try{
            if(!conversacionesAbiertas.containsKey(ip.getPeer(amig.get(peerClicado)).getName())){            
                System.out.println("peer : " + amig.get(peerClicado));        
                System.out.println("id peer : " + ip.getPeer(amig.get(peerClicado)));
                ChatWindow cw = new ChatWindow(ip,ip.getPeer(amig.get(peerClicado)),this);
                cw.toFront();
                conversacionesAbiertas.put(ip.getPeer(amig.get(peerClicado)).getName(), cw);//añado el nombre a las ventanas ya existentes
                cw.setVisible(true);
            }
        }catch(Exception e){
            System.out.println("peta aqui");  
        }       
    }//GEN-LAST:event_iniciarChatMouseClicked

    private void iniciarChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarChatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iniciarChatActionPerformed

    private void crearGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearGrupoActionPerformed
        try {
            // TODO add your handling code here:
            creacionGrupo cg = new creacionGrupo(id,ip,this);
            cg.setVisible(true);
        } catch (RemoteException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_crearGrupoActionPerformed

    private void listaGruposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaGruposMouseClicked
        int caretPos = listaGrupos.getCaretPosition(); //Devuelve el indice del char seleccionado entre toda la lista
        int rowNum = (caretPos == 0) ? 1 : 0;
        for (int offset = caretPos; offset > 0;) {
            try {
                offset = Utilities.getRowStart(listaGrupos, offset) - 1; //Va cogiendo los indices de los chars que delimitan las filas
            } catch (BadLocationException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            rowNum++;
        }       
            grupoClicado = rowNum-1;         
    }//GEN-LAST:event_listaGruposMouseClicked

    private void listaGruposMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaGruposMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_listaGruposMouseMoved

    private void entrarGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrarGrupoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entrarGrupoActionPerformed

    private void entrarGrupoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_entrarGrupoMouseClicked
        String nombreGrupo = grupos.get(grupoClicado);
        if(gruposCreados.containsKey(nombreGrupo)){
           ChatGrupoWindow cgw = (ChatGrupoWindow) gruposCreados.get(nombreGrupo);
           cgw.setVisible(true);
        }
    }//GEN-LAST:event_entrarGrupoMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bienvenido;
    private javax.swing.JButton crearGrupo;
    private javax.swing.JButton desconectar;
    private javax.swing.JButton entrarGrupo;
    private javax.swing.JButton iniciarChat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea listaAmigos;
    private javax.swing.JTextArea listaGrupos;
    // End of variables declaration//GEN-END:variables
}
